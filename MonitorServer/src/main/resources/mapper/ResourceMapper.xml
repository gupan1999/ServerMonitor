<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.monitor.dao.ResourceMapper">
<!--  <cache type="com.monitor.utils.MybatisRedisCache"/>-->
<!--  <cache/>-->
  <resultMap id="BaseResultMap" type="com.monitor.pojo.Resource">
    <id column="resource_id" jdbcType="BIGINT" property="resourceId" />
    <result column="resource_path" jdbcType="VARCHAR" property="resourcePath" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="resource_type" jdbcType="INTEGER" property="resourceType" />
  </resultMap>


  <sql id="Base_Column_List">
     resource_id, resource_path, resource_name, resource_type
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resource_
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from resource_
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.monitor.pojo.Resource">
    insert into resource_ (resource_id, resource_path, resource_name, 
      resource_type)
    values (#{resourceId,jdbcType=BIGINT}, #{resourcePath,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, 
      #{resourceType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.monitor.pojo.Resource">
    insert into resource_
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="resourcePath != null">
        resource_path,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="resourceType != null">
        resource_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="resourcePath != null">
        #{resourcePath,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        #{resourceType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.monitor.pojo.Resource">
    update resource_
    <set>
      <if test="resourcePath != null">
        resource_path = #{resourcePath,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null">
        resource_type = #{resourceType,jdbcType=INTEGER},
      </if>
    </set>
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.monitor.pojo.Resource">
    update resource_
    set resource_path = #{resourcePath,jdbcType=VARCHAR},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      resource_type = #{resourceType,jdbcType=INTEGER}
    where resource_id = #{resourceId,jdbcType=BIGINT}
  </update>

  <select id="getResources" resultType="com.monitor.pojo.Resource">
    select
    r.resource_id, r.resource_path, r.resource_name, r.resource_type
    from resource_ r inner join role_resource rr
    on r.resource_id = rr.resource_id
    where rr.role_id in
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item.roleId}
    </foreach>
  </select>
</mapper>